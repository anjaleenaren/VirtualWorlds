#pragma config(Sensor, in1,    leftLight,      sensorReflection)
#pragma config(Sensor, in2,    midLight,       sensorReflection)
#pragma config(Sensor, in3,    rightLight,     sensorReflection)
#pragma config(Sensor, in4,    wristPoti,      sensorPotentiometer)
#pragma config(Sensor, in6,    gyro,           sensorGyro)
#pragma config(Sensor, dgtl1,  rightEnc,       sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  leftEnc,        sensorQuadEncoder)
#pragma config(Sensor, dgtl5,  scissorEnc,     sensorQuadEncoder)
#pragma config(Sensor, dgtl8,  Sonar,          sensorSONAR_cm)
#pragma config(Motor,  port1,           frontRight,    tmotorVex393TurboSpeed_HBridge, openLoop, reversed)
#pragma config(Motor,  port2,           backRight,     tmotorVex393TurboSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           frontLeft,     tmotorVex393TurboSpeed_MC29, openLoop)
#pragma config(Motor,  port4,           backLeft,      tmotorVex393TurboSpeed_MC29, openLoop)
#pragma config(Motor,  port6,           claw,          tmotorVex393TurboSpeed_MC29, openLoop)
#pragma config(Motor,  port8,           scissorLeft,   tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port9,           scissorRight,  tmotorVex393HighSpeed_MC29, openLoop)
#pragma config(Motor,  port10,          wrist,         tmotorVex393TurboSpeed_HBridge, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

int scissorBottom = -180;
int scissorTop = 1400;

void setDrive (int left, int right)
{
	motor [frontRight] = motor [backRight] = right;
	motor [frontLeft] = motor [backLeft] = left;
}

task setArm (int speed, int distance)
{
	motor [scissorLeft] = motor [scissorRight] = speed;
	if (speed > 0)
	{
		while (SensorValue [scissorEnc] < distance) sleep(10);
	} 
	else if (speed < 0)
	{
		while (SensorValue [scissorEnc] < distance) sleep(10);
	} 

}

void closeClaw (bool state)
{
	if (state == true) motor [claw] = 127;
	else if (state == false) motor [claw] = -127;
	unsigned long startTimer = nPgmTime;
	while (nPgmTime-startTimer < 200) sleep (10);
	motor [claw] = 0;
}


task main()
{
	clearDebugStream();
	setDrive(127, 127);
	setArm(127);
	while (SensorValue[leftEnc] < 1170)
	{
		sleep (10);
		if (SensorValue [scissorEnc] > 265) setArm(0);
	}
	setDrive(0, 0);
	closeClaw(false);
	motor[wrist] = 127;
	writeDebugStreamLine("%d", SensorValue[wristPoti]);
	while (SensorValue[wristPoti] < 3200) sleep(10);
	motor[wrist] = 0;

	setArm(-127);
	while (SensorValue [scissorEnc] > -50) sleep(10);
	setArm(0);
}
